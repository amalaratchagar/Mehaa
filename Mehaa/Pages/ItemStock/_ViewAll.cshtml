@using Core.Entities.Inventory
@model IEnumerable<ItemStock>
<table class="table table-bordered" id="itemCategoryTable">
    <thead>
        <tr>
            <th>
                Item Name
            </th>
            <th>
                Discription
            </th>
            <th>
                Quantity
            </th>
            <th>
                Edit
            </th>
            <th>
                Remove
            </th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() != 0)
        {
            @foreach (var itemStock in Model)
            {
        <tr>
            <td>
                @itemStock.Item.ShortName
            </td>
            <td>
                @itemStock.Discription
            </td>
            <td>
                @itemStock.Quantity
            </td>
            <td text-right">
                <a onclick="jQueryModalGet('?handler=CreateOrEdit&id=@itemStock.Id','Edit Item Category')" class="btn btn-info text-white"> <i class="fa fa-edit"></i></a>
            </td>
            <td text-right">
                <form method="post" asp-page="Index" asp-route-id="@itemStock.Id" asp-page-handler="Delete" onsubmit="return jQueryModalDelete(this)" class="d-inline">
                    <button type="submit" class="btn btn-danger text-white"> <i class="fa fa-trash"></i></button>
                </form>
            </td>
        </tr>
            }
        }
    </tbody>
</table>
<script>
    $(document).ready(function () {
        $("#itemCategoryTable").DataTable();
    });
</script>