@using Core.Entities.Inventory
@model ItemStock
@inject Core.Interfaces.ILookupRepositoryAsync lookupRepositoryAsync

<form id="create-form" method="post" asp-page="Index" asp-route-id="@Model.Id" asp-page-handler="CreateOrEdit" onsubmit="return jQueryModalPost(this);">

    <div class="form-group row">
        <label class="col-md-3 col-form-label">Item</label>
        <div class="col-md-9">
            @Html.DropDownListFor(x => Model.ItemId, lookupRepositoryAsync.GetItems().Select(x => new SelectListItem { Text = x.ShortName, Value = x.Id.ToString() }), htmlAttributes: new { @class = "form-control", name = "ItemId" })
            @Html.ValidationMessageFor(x => Model.ItemId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        <label class="col-md-3 col-form-label">Discription</label>
        <div class="col-md-9">
            <input type="text" autocomplete="off" asp-for="Discription" name="Discription" class="form-control">
            <span asp-validation-for="Discription" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group row">
        <label class="col-md-3 col-form-label">Quantity</label>
        <div class="col-md-9">
            <input type="number" autocomplete="off" asp-for="Quantity" name="Quantity" class="form-control">
            <span asp-validation-for="Quantity" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-3">
        </div>
    </div>
    <div class="form-group justify-content-between">
        <button type="button" class="btn btn-secondary close-button" data-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary save-button">Save</button>
    </div>

</form>
<script type="text/javascript" language=javascript>
    $.validator.unobtrusive.parse(document);
</script>